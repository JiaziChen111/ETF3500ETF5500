library(MASS)
data("UScereal")
?UScereal
UScereal
#rmarkdown::render('MDS.Rmd',output_file='MDS.pdf')
#rmarkdown::render('MDS.Rmd',output_file='MDSSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'HDDA Tutorial: MDS
: Solutions','HDDA Tutorial: MDS'
)
knitr::opts_chunk$set(echo = TRUE)
#First load required packages
library(MASS) #MASS used for data
library(dplyr) #dplyr used to clean data
cereal_metric<-select(UScereal,-vitamins,-shelf,-mfr)
str(cereal_metric)#Confirm non-metric removed
cereal_metric%>%
scale%>% #standardise
dist->dd #Compute distance
cmds<-cmdscale(dd)%>%as_tibble()
cmds
rownames(UScereal)
library(tibble)
#rmarkdown::render('MDS.Rmd',output_file='MDS.pdf')
#rmarkdown::render('MDS.Rmd',output_file='MDSSols.pdf')
sols<-TRUE
title<-ifelse(sols, 'HDDA Tutorial: MDS
: Solutions','HDDA Tutorial: MDS'
)
knitr::opts_chunk$set(echo = TRUE)
#First load required packages
library(MASS) #MASS used for data
library(tidyverse)
cereal_metric<-select(UScereal,-vitamins,-shelf,-mfr)
str(cereal_metric)#Confirm non-metric removed
cereal_metric%>%
scale%>% #standardise
dist->dd #Compute distance
rownames(UScereal)->attributes(dd)$Labels
dd
cmds<-cmdscale(dd)
cmds
as_tibble(cmds)
#Compute classical MDS
#Store representation in tibble
cmds<-cmdscale(dd)%>%
as.data.frame()%>%
as_tibble()%>%
rownames_to_column(Name)
#Compute classical MDS
#Store representation in tibble
cmds<-cmdscale(dd)%>%
as.data.frame()%>%
as_tibble()%>%
rownames_to_column()
cdms
cmds
#Compute classical MDS
#Store representation in tibble
cmds<-cmdscale(dd)%>%
as.data.frame()%>%
rownames_to_column()
cmds
View(UScereal)
#Compute classical MDS
#Store representation in tibble
cmds<-cmdscale(dd,eig = T)
cmds$points
cmds$eig
rmarkdown::render('MDS.Rmd',output_file='MDSSols.pdf')
rmarkdown::render('MDS.Rmd',output_file='MDS.pdf')
