install.packages("tibble")
library(dplyr)
library(magrittr)
library(ggplot2)
library(tibble)
library(lubridate)
load('../../Data/SWMacro.RData')
pcaSW<-prcomp(StockWatsonMacro)
pcaSW%>%
use_series(x)%>%
as.data.frame%>%
rownames_to_columns->pcd
load('../../Data/SWMacro.RData')
pcaSW<-prcomp(StockWatsonMacro)
pcaSW%>%
use_series(x)%>%
as.data.frame%>%
rownames_to_column->pcd
pcd
x<-pcd$rowname
x
?format
format(x,%YQ%q)
format(x,format='%YQ%q')
?format
?parse_date_time
parse_date_time(x,'%YQ%q')
?parse_date_time2
?strsplit
strsplit(x)
strsplit(x,split='Q')
strsplit(x,split='Q')%>%unlist
strsplit(x,split='Q')%>%unlist%>%matrix(.,2,196)
strsplit(x,split='Q')%>%unlist%>%matrix(.,2,196)%>%t()
?quarter
seq.Date(1960.1,2008.4,by = 'quarter')
a <- as.Date("2006-01-01")
b <- as.Date("2011-01-01")
a
b
seq.Date(a,b,by='quarters')
r<-seq.Date(a,b,by='quarters')
r+quarters(4)
library(lubridate)
r+quarters(4)
head(pcd)
head(pcd[,1])
tail(pcd[,1])
library(lubridate)
load('../../Data/SWMacro.RData')
pcaSW<-prcomp(StockWatsonMacro)
pcaSW%>%
use_series(x)%>%
as.data.frame%>%
rownames_to_column->pcd
start <- as.Date("1960-01-01")
end <- as.Date("2008-10-01")
sd<-seq.Date(a,b,by='quarters')
mutate(pcd,Time=sd)
sd
sd<-seq.Date(start,end,by='quarters')
mutate(pcd,Time=sd)
?facet_wrap
?gather
library(tidyr)
?gather
library(lubridate)
library(tidyr)
load('../../Data/SWMacro.RData')
pcaSW<-prcomp(StockWatsonMacro)
pcaSW%>%
use_series(x)%>%
as.data.frame%>%
rownames_to_column%>%->pcd
start <- as.Date("1960-01-01")
end <- as.Date("2008-10-01")
sd<-seq.Date(start,end,by='quarters')
mutate(pcd,Time=sd)%>%
select(.,Time,PC1,PC2,PC3)%>%
gather(.,key=Comp,value=PC,PC1,PC2,PC3)->check
check
head(check)
?facet_wrap
library(lubridate)
library(tidyr)
load('../../Data/SWMacro.RData')
pcaSW<-prcomp(StockWatsonMacro)
pcaSW%>%
use_series(x)%>%
as.data.frame%>%
rownames_to_column->pcd
start <- as.Date("1960-01-01")
end <- as.Date("2008-10-01")
sd<-seq.Date(start,end,by='quarters')
mutate(pcd,Time=sd)%>%
select(.,Time,PC1,PC2,PC3)%>%
gather(.,key=Comp,value=PC,PC1,PC2,PC3)%>%
ggplot(.,aes(x=Time,y=PC))+geom_line()+facet_wrap(~Comp)
pca
pcaSW$rotation
?extract
ls()
pcaSW$rotation$PC1
pcaSW$rotation
pcaSW$rotation[["PC1"]]
pcaSW$rotation["PC1"]
pcaSW$rotation[,"PC1"]
Std<-pca$rotation[,1]
StateSE%>%
select(.,Income,
Illiteracy,
LifeExp,
HSGrad,
Murder)%>%
prcomp%>%
use_series(.,rotation)%>%
extract(,1)->Unstd
kable(cbind(Std,Unstd))
StateSE%>%
select(.,Income,
Illiteracy,
LifeExp,
HSGrad,
Murder)%>%
prcomp%>%
use_series(.,rotation)%>%
extract(,1)->Unstd
load('../../Data/StateSE.RData')
StateSE%>%
select(.,Income,
Illiteracy,
LifeExp,
HSGrad,
Murder)%>%
prcomp%>%
use_series(.,rotation)%>%
extract(,1)->Unstd
Unstd
StateSE%>%
select(.,Income,
Illiteracy,
LifeExp,
HSGrad,
Murder)%>%
prcomp%>%
use_series(.,rotation)%>%
extract(,"PC1")->Unstd
StateSE%>%
select(.,Income,
Illiteracy,
LifeExp,
HSGrad,
Murder)%>%
prcomp%>%
use_series(.,rotation)->Unstd
Unstd
iris
extract(iris,1)
extract(iris,1:2)
extract(iris,,1)
isis%>%extract(,1:4)
iris%>%extract(,1:4)
?transmute
?rename
ls
ls()
StockWatsonMacro
rename(StockWatsonMacro, a=HHSNTN*2)
rename(StockWatsonMacro, transmute=HHSNTN*2)
transmute(StockWatsonMacro, tute=HHSNTN*2)
?prcomp
?screeplot
library(magrittr)
library(dplyr)
load('../../Data/StateSE.RData')
StateSE%>%
select_if(is.numeric)%>% #Only use numeric variables for PCA
prcomp(scale. = TRUE)->pcaout #Do pca
summary(pcaout) #summary of information
rownames(pcaout$x)<-use_series(StateSE,StateAbb)
biplot(pcaout)
screeplot(pcaout,type="lines")
load('StateSE.RData')
load("~/Dropbox/Teaching/2017/HDDA/Data/StateSE.RData")
StateSE%>%
select_if(is.numeric)%>% #Only use numeric variables for PCA
prcomp(scale. = TRUE)->pcaout #Do pca
summary(pcaout) #summary of information
library(magrittr)
library(dplyr)
StateSE%>%
select_if(is.numeric)%>% #Only use numeric variables for PCA
prcomp(scale. = TRUE)->pcaout #Do pca
summary(pcaout) #summary of information
rownames(pcaout$x)<-use_series(StateSE,StateAbb)
biplot(pcaout)
screeplot(pcaout,type="lines")
library(magrittr)
library(dplyr)
load('../../Data/StateSE.RData')
View(StateSE)
setwd("~/Dropbox/NonShared/HDDA2018/Lecture Notes/03PCA")
xaringan:::inf_mr()
xaringan::summon_remark()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages("ggbiplot")
xaringan:::inf_mr()
xaringan:::inf_mr()
?biplot
?biplot.prcomp
load('StateSE.RData')
StateSE%>%
select_if(.,is.numeric)%>%
scale()%>%
prcomp()->pca
biplot(pca)
biplot(pca,scale = 0)
par(mfrow(c(2,1)))
par(mfrow=c(2,1))
biplot(pca,scale = 0)
biplot(pca,scale = 1)
load('StateSE.RData')
StateSE%>%
select_if(.,is.numeric)%>%
scale()%>%
cor()
load('StateSE.RData')
StateSE%>%
select_if(.,is.numeric)%>%
scale()
pca$x[2,]
par(mfrow=c(3,1))
biplot(pca,scale = 0)
biplot(pca,scale = 1)
biplot(pca,pc.biplot = TRUE)
xaringan:::inf_mr()
xaringan:::inf_mr()
?plotly
xaringan:::inf_mr()
xaringan:::inf_mr()
StateSE%>%select_if(is.numeric())%>%prcomp(.scale=TRUE)->pcaout
StateSE%>%select_if(is.numeric)%>%prcomp(.scale=TRUE)->pcaout
?prcomp
StateSE%>%select_if(is.numeric)%>%prcomp(scale.=TRUE)->pcaout
pcaout$x
which(StateSE$State=="nevada")
biplot(pca,cex=2,xlim=c(-4.5,2.6),ylim=c(-2,4),scale=0)
nevind<-which(StateSE$State=="nevada")
p1<-pca$x[nevind,1:2]
p2<-c(2,1)
lines(p1,p2)
?lines
xaringan:::inf_mr()
?abline
?lines
StateSE%>%
select_if(is.numeric)%>%
scale->datam
svd(datam)
u<-svd$u
ss<-svd(datam)
u<-ss$u
u
pca$x%>%tail
ss$d
u<-ss$u%>%diag(ss$d)
ss$d
diag(ss$d)
u<-ss$u%*%diag(ss$d)
tail(u)
biplot(pcaout,pc.biplot = TRUE)
dev.off()
biplot(pcaout,pc.biplot = TRUE)
points(2,0.5)
points(2,0.5,pch=10)
points(1,1,pch=10)
ss$d
sum(ss$d)
sum(ss$d)^2
sqrt(sum(ss$d))
StateSE%>%select_if(is.numeric)%>%scale->X
X
apply(X,2,mean)
apply(X,2,sd)
ss<-svd(X)
ss$d
ss$d^2
sum(ss$d^2)
5/245
sqrt(5)
2/sqrt(5)
biplot
biplot.prcomp
biplot.princomp
?biplot
biplot.princomp
methods(biplot)
UseMethod(biplot)
getAnywhere(biplot.prcomp)
getAnywhere(biplot.default)
biplot(pcaout,expand=2)
biplot(pcaout,expand=1)
biplot(pcaout,expand=5)
setwd("~/Dropbox/NonShared/HDDA2018/Lecture Notes/04Distance")
xaringan::summon_remark()
xaringan:::inf_mr()
library(ggfortify)
require(tidyverse)
load('Beer.RData')
Beer%>%select_if(is.numeric)%>%scale%>%dist->d
d
fortify(d)
library(broom)
tidy(d)
?dist
rm(list-ls())
rm(list=ls())
