?midwest
midwest
data("txhousing")
?txhousing
txhousing
require(PoEdata)
data("br")
br
head(br)
require(magrittr)
head(txhousing)
txhousing$year%>%unique()
txhousing%>%filter(year==2015)%>%ggplot(aes(x=inventory,y=median,col=month,label=inventory)+geom_point()
)
txhousing%>%filter(year==2015)%>%ggplot(aes(x=inventory,y=median,col=month,label=inventory))+geom_point()
txhousing%>%filter(year==2014)%>%mutate(month=as.factor(month))%>%ggplot(aes(x=inventory,y=median,col=month,label=inventory))+geom_point()
txhousing%>%filter(year==2014)%>%mutate(month=as.factor(month))%>%ggplot(aes(x=inventory,y=median,col=month,label=inventory))+geom_point()->g
require(ggplotly)
require(plotly)
plotly(g)
?plotly
ggplotly(g)
txhousing%>%filter(year==2014)%>%mutate(month=as.factor(month))%>%ggplot(aes(x=inventory,y=median,col=month,text=inventory))+geom_point()->g
ggplotly(g)
txhousing%>%filter(year==2014)%>%mutate(month=as.factor(month))%>%ggplot(aes(x=inventory,y=median,col=month,text=city))+geom_point()->g
ggplotly(g)
txhousing%>%filter(year==2014)%>%mutate(month=as.factor(month))%>%ggplot(aes(text=city,x=inventory,y=median,col=month))+geom_point()->g
ggplotly(g)
txhousing%>%filter((year==2014)&(month==12))%>%ggplot(aes(text=city,x=inventory,y=median))+geom_point()->g
ggplotly(g)
txhousing%>%filter((year==2014)&(month==12))%>%ggplot(aes(x=inventory,y=median))+geom_point(aes(text=city))->g
ggplotly(g)
txhousing%>%filter((year==2014)&(month==12))%>%ggplot(aes(x=inventory,y=median))+geom_point(aes(text=city))+scale_y_log10()+scale_x_log10()->g
ggplotly(g)
txhousing%>%filter((year==2014)&(month==12))%>%ggplot(aes(x=inventory,y=median))+geom_point(text=city)+scale_y_log10()+scale_x_log10()->g
ggplotly(g,tooltip = text())
txhousing%>%filter((year==2014)&(month==12))%>%ggplot(aes(x=inventory,y=median,text=city))+geom_point()+scale_y_log10()+scale_x_log10()->g
ggplotly(g,tooltip = text())
ggplotly(g,tooltip = text
)
ggplotly(g,tooltip = "text")
devtools::install_git(https://github.com/robjhyndman/MonashEBSTemplates)
devtools::install_git('https://github.com/robjhyndman/MonashEBSTemplates')
require(MonashEBSTemplates)
MonashEBSTemplates::exam()
?MonashEBSTemplates::exam()
?exam
xaringan:::inf_mr()
devtools::install_github(rstudio/httpuv)
devtools::install_github(https://github.com/rstudio/httpuv)
devtools::install_github('rstudio/httpuv')
devtools::install_github('yihui/servr')
xaringan:::inf_mr()
S<-matrix(c(1,1,1,0,0,1),3,2)
S
S<-matrix(c(1,1,1,0,0,1),3,2,byrow = TRUE)
S
svd(s)->ss
svd(S)->ss
U<-ss$u
V<-ss$v
ss$d
D<-diag(ss$d)
U
V
D
X<-matrix(runif(200),100,2)
X
X<-matrix(runif(300),100,3)
Sigmahat<-t(X)%*%X
Sigmahat
Sigmatilde<-S%*%solve(t(S)%*%solve(Sigmahat)%*%S)t(S)
Sigmatilde<-S%*%solve(t(S)%*%solve(Sigmahat)%*%S)%*%t(S)
Sigmatilde
Up<-U[,1:2]
Up
Up%*%t(Up)%*%Sigmahat%*%t(Up)%*%Up
Up%*%t(Up)%*%Sigmahat%*%Up%*%t(Up)
require(PoEdata)
data('cps4_small')
head(cps4_small)
nrow(cps4_small)
write.csv(x = 'cps4_small',file = '~/Downloads/cps4_small.csv')
write.csv(x = cps4_small,file = '~/Downloads/cps4_small.csv')
require(PoEdata)
data("br")
head(br)
head(br2)
head(br2)
head(br)
data("br2")
head(br2)
require(PoEdata)
data("br")
head(br)
min(br$age)
install.packages('rainbow')
?rainbow
library(rainbow)
?rainbow::rainbow
plot.fts
?plot.fts
?rainbow::fts()
p<-10
n<-100
1:10
age<-75:85
age
matrix(runif(11*60),11,60)
matrix(runif(11*60),11,60)->out
out
fts(age,out)
fts(age,out)->ff
plot(ff)
age
rainbow::fts(age,out)->ff
library(rainbow)
age<-75:85
matrix(runif(11*60),11,60)->out
rainbow::fts(age,out)
setwd("~/Dropbox/NonShared/HDDA2018/Scripts")
rm(list=ls())
a<-1
b=2
name<-'Anastasios'
Ονομα<-'Αναστασιος'
ls()
getwd()
z<-a+b
roota<-sqrt(a)
rootb<-sqrt(b)
rootname<-sqrt(name)
print(rootb)
rootb
str(rootb)
str(name)
?sqrt
??logarithms
a<-1 # Set the variable a to 1
#x<-4 This line is not executed
print(a)
print(x)
Consumption<-c(50,40,25,0)
print(Consumption)
str(Consumption)
logcons<-log(Consumption)
str(logcons)
meancons<-mean(Consumption)
str(meancons)
log(-1)
getwd()
load("Beer.RData") #Make sure you change this so it has the location of wherever you saved Beer.RData
setwd("~/Dropbox/NonShared/HDDA2018/Lecture Notes/01Intro")
load("Beer.RData") #Make sure you change this so it has the location of wherever you saved Beer.RData
Beer$alcohol
head(Beer$alcohol)
alist<-list(w=name, x=Drink, y=Beer)
Drink<-c('Coke','Pepsi','Coke','Homebrand')
alist<-list(w=name, x=Drink, y=Beer)
alist[[1]]
alist$x
install.packages("DT")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("bindrcpp")
install.packages("scatterplot3d")
install.packages("maps")
load('StateSE.RData')
StateSE
as_tibble(StateSE)
library(tidyverse)
as_tibble(StateSE)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
as_tibble(StateSE)%>%mutate(State=simpleCap(State))%>%View()
sapply(StateSE$State, simpleCap)->su
su
StateSEt<-as_tibble(StateSE)
mutate(StateSEt,State=su)->StateSEt
View(StateSEt)
StateSEt->StateSE
saveRDS(StateSE,file = 'StateSE.rds')
rm(list=ls())
readRDS('StateSE.rds')%>%View
states
state
state.x77
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
scatterplot3d(x = States$Income,
y = States$LifeExp,
z = States$HSGrad,
xlab='Income',
ylab='LifeExp',
zlab='HSGrad',
cex.symbols = 2,
pch=15)
ggplot(States, aes(x=Income, y=LifeExp, label=StateAbb, text=State))+geom_text(size=3)->gp
States<-readRDS('StateSE.rds')
ggplot(States, aes(x=Income))+geom_histogram(bins = 15)->gp
ggplotly(gp,dynamicTicks = TRUE)%>%
frameWidget(width="70%",height="40%")
ggplot(States, aes(x=Income, y=LifeExp, label=StateAbb, text=State))+geom_text(size=3)->gp
ggplotly(gp,dynamicTicks = TRUE, tooltip = 'text')%>%
frameWidget(width="70%",height="40%")
scatterplot3d(x = States$Income,
y = States$LifeExp,
z = States$HSGrad,
xlab='Income',
ylab='LifeExp',
zlab='HSGrad',
cex.symbols = 2,
pch=15)
States%>%prcomp()
States%>%select_if(is.numeric)%>%prcomp()
?augment
library(broom)
States%>%select_if(is.numeric)%>%prcomp()%>%augment()
?augment
States%>%select_if(is.numeric)%>%prcomp()%>%augment(data=States)%>%View
rename_if
?rename_if
dropfitted<-function(x){substring(x,7)}
States%>%
select_if(is.numeric)%>%
prcomp()%>%
augment(data=States)%>%
select(-.rownames)%>%
rename_at(.vars = 8:12,dropfitted)->StatesSEPC
View(StatesSEPC)
States%>%
select_if(is.numeric)%>%
prcomp()%>%
augment(data=States)%>%
select(-.rownames)%>%
rename_at(.vars = 8:12,function(x){substring(x,8)})->StatesSEPC
install.packages("mapproj")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
States%>%
select_if(is.numeric)%>%
prcomp()%>%
augment(data=States)%>%
select(-.rownames)%>%
rename_at(.vars = 8:12,
function(x){substring(x,8)})->StateSEPC
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=State))+
coord_map("albers",lat0=30,lat1=40)+
geom_map(aes(fill=PC1), map=state_map)+
geom_text(aes(x=state.center$x,y=state.center$y,label=StateAbb),size=5)+
expand_limits(x=state_map$long, y=state_map$lat)+
scale_fill_gradient2()+#n(colors=heat.colors(20))+
theme_dark()+
labs(x="",y="")
States%>%
select_if(is.numeric)%>%
prcomp()%>%
augment(data=States)%>%
select(-.rownames)%>%
rename_at(.vars = 8:12,
function(x){substring(x,8)})->StateSEPC
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=States))+
coord_map("albers",lat0=30,lat1=40)+
geom_map(aes(fill=PC1), map=state_map)+
geom_text(aes(x=state.center$x,y=state.center$y,label=StateAbb),size=5)+
expand_limits(x=state_map$long, y=state_map$lat)+
scale_fill_gradient2()+#n(colors=heat.colors(20))+
theme_dark()+
labs(x="",y="")
States%>%
select_if(is.numeric)%>%
prcomp()%>%
augment(data=States)%>%
select(-.rownames)%>%
rename_at(.vars = 8:12,
function(x){substring(x,8)})->StateSEPC
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=state))+
coord_map("albers",lat0=30,lat1=40)+
geom_map(aes(fill=PC1), map=state_map)+
geom_text(aes(x=state.center$x,y=state.center$y,label=StateAbb),size=5)+
expand_limits(x=state_map$long, y=state_map$lat)+
scale_fill_gradient2()+#n(colors=heat.colors(20))+
theme_dark()+
labs(x="",y="")
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=state))
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=State))
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=State))+
coord_map("albers",lat0=30,lat1=40)
state_map<-map_data("state")
ggplot(StateSEPC,aes(map_id=States))+
coord_map("albers",lat0=30,lat1=40)
state_map
ggplot(StateSEPC%>%mutate(State=tolower(State)),
aes(map_id=State))+
coord_map("albers",lat0=30,lat1=40)+
geom_map(aes(fill=PC1), map=state_map)+
geom_text(aes(x=state.center$x,y=state.center$y,label=StateAbb),size=5)+
expand_limits(x=state_map$long, y=state_map$lat)+
scale_fill_gradient2()+#n(colors=heat.colors(20))+
theme_dark()+
labs(x="",y="")
States%>%
select_if(is.numeric)%>%
scale()%>%
dist()%>%
hclust(.,method='ward.D2')->cl
cl
class(cl)
?augment
?augment.htest
?augment.glmRob
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans
?kmeans
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StatesSEPC)
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%View
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%
mutate(StateSEPC,Cluster=ifelse(.cluster==1,'Non-South','South'))%>%View
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%
mutate(StateSEPC,Cluster=ifelse(.cluster==1,'Non-South','South'))%>%View
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%
mutate(Cluster=ifelse(.cluster==1,'Non-South','South'))%>%View
set.seed(1)
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%
mutate(Cluster=ifelse(.cluster==1,'South','Non-South'))%>%View
set.seed(1)
States%>%
select_if(is.numeric)%>%
scale()%>%
kmeans(2)%>%
augment(StateSEPC)%>%
mutate(Cluster=ifelse(.cluster==2,'South','Non-South'))%>%
select(-.cluster)->StateSEPC
ggplot(StateSEPC,aes(x=PC1,y=PC2, label=StateAbb,text=State,color=Cluster))+
geom_text()->gp
ggplotly(gp,dynamicTicks = TRUE,tooltip = "text")%>%
frameWidget(width="70%",height="40%")
load('Beer.RData')
Beer
as_tibble(Beer)%>%View
as_tibble(Beer)%>%select(beer, rating, origin:light)%>%View()
as_tibble(Beer)%>%select(beer, rating, origin:light)%>%saveRDS('Beer.rds')
library(ca)
install.packages("ca")
library(ca)
?ca
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
require(ca)
kable(table(Beer$rating,Beer$origin))%>%
ca%>%
plot
table(Beer$rating,Beer$origin)%>%
ca%>%
plot
?plot.ca
install.packages("FactoMineR")
library(FactoMineR)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
require(ca)
require(FactoMineR)
table(Beer$rating,Beer$origin)%>%
CA%>%
plot
select(Beer,rating,origin)%>%
CA%>%
plot
Beer$rating
?CA
data("children")
children
table(Beer$rating,Beer$origin)
table(Beer$rating,Beer$origin)%>%as.matrix%>%CA
str(children)
table(Beer$rating,Beer$origin)%>%as.tibble()%>%CA
table(Beer$rating,Beer$origin)%>%as.data.frame()%>%CA
table(Beer$rating,Beer$origin)%>%as.data.frame()%>%View
table(Beer$rating,Beer$origin)%>%as.matrix()
table(Beer$rating,Beer$origin)%>%as.matrix()%>%as.data.frame()
data(children)
res.ca <- CA (children, row.sup = 15:18, col.sup = 6:8)
summary(res.ca)
## Ellipses for all the active elements
ellipseCA(res.ca)
## Ellipses around some columns only
ellipseCA(res.ca,ellipse="col",col.col.ell=c(rep("blue",2),rep("transparent",3)),
invisible=c("row.sup","col.sup"))
table(Beer$rating,Beer$origin)%>%
ca('symmetric')->caout
caout
caout$rowcoord
caout$colcoordcoord
caout$colcoord
cadf<-bind_rows(tibble(caout$rowcoord),
tibble(caout$colcoord))
tibble(caout$rowcoord)
cadf<-bind_rows(as_tibble(caout$rowcoord),
as_tibble(caout$colcoord))
cadf
cadf<-bind_rows(as_tibble(caout$rowcoord)%>%rownames_to_column(),
as_tibble(caout$colcoord)%>%rownames_to_column())
cadf
caout$rowcoord%>%rownames_to_column()
caout$rowcoord%>%as_data_frame%>%rownames_to_column()
caout$rowcoord%>%as.data.frame%>%rownames_to_column()
caout$rowcoord%>%as.data.frame%>%rownames_to_column()%>%as_tibble
caout$rowcoord%>%
as.data.frame%>%
rownames_to_column()%>%
as_tibble%>%
add_column(Category='Row')->dfr
caout$colcoord%>%
as.data.frame%>%
rownames_to_column()%>%
as_tibble%>%
add_column(Category='Col')->dfc
cadf<-bind_rows(dfr,dfc)
cadf
cadf%>%
ggplot(aes(x=Dim1,y=Dim2,col=Category,label=rowname))+geom_point()
cadf
install.packages("ggrepel")
rm(list=ls())
q()
unlink('Intro_cache', recursive = TRUE)
rm(list=ls())
xaringan:::inf_mr()
