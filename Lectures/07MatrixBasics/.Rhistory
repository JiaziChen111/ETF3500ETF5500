xaringan::summon_remark()
setwd("~/Documents/Teaching/HDDA2019/Lectures/08FactorModelling")
xaringan::summon_remark()
?factanal
?augment
library(broom)
?augment.factanal
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
require(ggfortify)
rm(list=ls())
#First load required packages
library(tidyverse)
Boston<-readRDS('Boston.rds')
Boston%>%
column_to_rownames('Town')%>%
prcomp(scale.=TRUE)->pcaout
screeplot(pcaout,type = 'l')
biplot(pcaout)
#First load required packages
Boston<-readRDS('Boston.rds')
Boston%>%
column_to_rownames('Town')%>%
factanal(factors = 2,scores = 'none',rotation = 'none')->facto
facto$loadings%>%tibble()
facto$loadings
facto$loadings
facto$loadings%>%str
facto$loadings@loadings
facto$loadings%>%as.data.frame()
facto$loadings%>%as.matrix()
facto$loadings%>%as.matrix()%>%as.data.frame()
facto$loadings%>%as.matrix()%>%as.data.frame()
facto$loadings%>%as.matrix()%>%data.frame()
facto$loadings%>%as.matrix()
facto$loadings%>%as.matrix()%>%print
facto$loadings%>%as.table()
facto$loadings%>%as.table()%>%as.data.frame()
facto$loadings%>%as.table()%>%as_tibble()
facto$loadings%>%as.table()%>%tibble()
facto$loadings%>%as.table()%>%data.frame()
loadings(facto)
loadings(facto)%>%as_data_frame()
loadings(facto)%>%as.data.frame()
broom::tidy(factanal())
broom::tidy(facto)
broom::tidy(facto)%>%View
facto
?theme_classic
?theme
?theme
?geom_segment
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
require(ggfortify)
rm(list=ls())
#First load required packages
library(tidyverse)
Boston<-readRDS('Boston.rds')
Boston%>%
column_to_rownames('Town')%>%
prcomp(scale.=TRUE)->pcaout
screeplot(pcaout,type = 'l')
biplot(pcaout)
#First load required packages
Boston<-readRDS('Boston.rds')
Boston%>%
column_to_rownames('Town')%>%
factanal(factors = 2,scores = 'none',
rotation = 'none')->facto
facto$loadings
library(broom)
fa_df<-tidy(facto) #Get into data frame
kable(fa_df)%>%
kable_styling(bootstrap_options = c("striped","hover","condensed"))%>%
scroll_box(height="500px")
ggplot(fa_df,aes(x=fl1,y=fl2,label=variable))+
geom_text()+theme_void()+
geom_segment(aes(x=0,y=-1,xend=0,yend=1),arrow = arrow())+
geom_segment(aes(x=-1,y=0,xend=1,yend=0),arrow = arrow())
Boston%>%
column_to_rownames('Town')%>%
factanal(factors = 2,scores = 'none',
rotation = 'varimax')->facto_vari
fav_df<-tidy(facto_vari) #Get into data frame
kable(fav_df)%>%
kable_styling(bootstrap_options = c("striped","hover","condensed"))%>%
scroll_box(height="500px")
ggplot(fav_df,aes(x=fl1,y=fl2,label=variable))+
geom_text()+theme_void()+
geom_segment(aes(x=0,y=-1,xend=0,yend=1),arrow = arrow())+
geom_segment(aes(x=-1,y=0,xend=1,yend=0),arrow = arrow())
Boston%>%
column_to_rownames('Town')%>%
factanal(factors = 2,scores = 'none',
rotation = 'promax')->facto_promax
fap_df<-tidy(facto_promax) #Get into data frame
kable(fap_df)%>%
kable_styling(bootstrap_options = c("striped","hover","condensed"))%>%
scroll_box(height="500px")
ggplot(fap_df,aes(x=fl1,y=fl2,label=variable))+
geom_text()+theme_void()+
geom_segment(aes(x=0,y=-1,xend=0,yend=1),arrow = arrow())+
geom_segment(aes(x=-1,y=0,xend=1,yend=0),arrow = arrow())
facto_promax
facto_promax$uniquenesses
facto_vari$uniquenesses
facto$uniquenesses
?factanal
setwd("~/Documents/Teaching/HDDA2019/Lectures/01Intro")
setwd("~/Documents/Teaching/HDDA2019/Lectures/09MatrixGeometry")
xaringan::summon_remark()
setwd("~/Documents/Teaching/HDDA2019/Lectures/08FactorModelling")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
require(magrittr)
require(tidyverse)
require(plotly)
require(widgetframe)
require(animation)
require(scatterplot3d)
require(DT)
require(rgl)
require(knitr)
require(kableExtra)
require(broom)
require(ggfortify)
rm(list=ls())
#First load required packages
library(tidyverse)
Boston<-readRDS('Boston.rds')
Boston%>%
column_to_rownames('Town')%>%
prcomp(scale.=TRUE)->pcaout
screeplot(pcaout,type = 'l')
pcaout
summary(pcaout)
setwd("~/Documents/Teaching/HDDA2019/Lectures/07MatrixBasics")
